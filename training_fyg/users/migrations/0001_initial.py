# Generated by Django 3.2.14 on 2022-07-21 08:08

from django.conf import settings
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(default='', error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 32 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=32, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('name', models.CharField(blank=True, max_length=120, verbose_name='Nombres')),
                ('last_name', models.CharField(blank=True, max_length=45, verbose_name='Apellido paterno')),
                ('second_last_name', models.CharField(blank=True, default='', max_length=45, verbose_name='Apellido materno')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha en que el registro fue creado.', verbose_name='Fecha de creación')),
                ('modified_at', models.DateTimeField(auto_now=True, help_text='Última fecha en que el registro fue modificado', verbose_name='Última modificación')),
                ('picture', models.ImageField(blank=True, max_length=1000, null=True, upload_to='users/profiles/user-profile/picture/%Y/%m/%d/', verbose_name='Avatar')),
                ('email', models.EmailField(error_messages={'unique': 'A user with that email already exists.'}, max_length=254, verbose_name='email address')),
                ('phone_number', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message='Phone number must be entered in the format: +999999999. Up to 15 digits allowed.', regex='\\+?1?\\d{9,15}$')])),
                ('is_active', models.BooleanField(default=False, help_text=('Indica si el registro debe ser tratado como activo.', 'Desmarque esta opción en lugar de borrar el registro'), verbose_name='active')),
                ('is_verified', models.BooleanField(default=False, help_text='Set to true when the user have verified its email address.', verbose_name='verified')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users_user_created', to=settings.AUTH_USER_MODEL, verbose_name='Usuario creador')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users_user_modified', to=settings.AUTH_USER_MODEL, verbose_name='Usuario editor')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
        ),
        migrations.CreateModel(
            name='UserLoginActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login_IP', models.GenericIPAddressField(blank=True, null=True, verbose_name='Ip de login')),
                ('login_datetime', models.DateTimeField(auto_now=True, verbose_name='Fecha y hora de login')),
                ('login_username', models.CharField(blank=True, max_length=40, null=True, verbose_name='Login username')),
                ('status', models.CharField(blank=True, choices=[('S', 'Exitoso'), ('F', 'Fallido')], default='S', max_length=1, null=True, verbose_name='Estatus')),
                ('user_agent_info', models.CharField(max_length=255, verbose_name='Información del agente de usuario')),
            ],
            options={
                'verbose_name': 'Actividad de login de usuario',
                'verbose_name_plural': 'Actividades de login de usuarios',
            },
        ),
        migrations.CreateModel(
            name='UserProfileRole',
            fields=[
                ('value', models.CharField(max_length=24, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.RegexValidator('^[A-Z_]*$', 'Sólo se permiten mayusculas y guiones bajos.')], verbose_name='Rol')),
                ('title', models.CharField(max_length=24, unique=True, verbose_name='Rol')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha en que el registro fue creado.', verbose_name='Fecha de creación')),
                ('modified_at', models.DateTimeField(auto_now=True, help_text='Última fecha en que el registro fue modificado', verbose_name='Ultima modificación')),
            ],
            options={
                'verbose_name': 'Rol de usuario',
                'verbose_name_plural': 'Roles de usuarios',
            },
        ),
        migrations.CreateModel(
            name='UserRegisterActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('register_IP', models.GenericIPAddressField(blank=True, null=True, verbose_name='Ip de registro')),
                ('register_datetime', models.DateTimeField(auto_now_add=True, verbose_name='Fecha y hora de registro')),
                ('register_verified_datetime', models.DateTimeField(blank=True, null=True, verbose_name='Fecha y hora de registro verificado')),
                ('register_username', models.CharField(blank=True, max_length=40, null=True, verbose_name='registro username')),
                ('register_email', models.CharField(blank=True, max_length=40, null=True, verbose_name='registro email')),
                ('register_rol', models.CharField(blank=True, max_length=40, null=True, verbose_name='registro rol del usuario')),
                ('status', models.CharField(blank=True, choices=[('V', 'Verificado'), ('SV', 'Sin Verificado')], default='SV', max_length=2, null=True, verbose_name='Estatus')),
                ('user_agent_info', models.CharField(max_length=255, verbose_name='Información del agente de usuario')),
            ],
            options={
                'verbose_name': 'Actividad de registro de usuario',
                'verbose_name_plural': 'Actividades de registro de usuarios',
            },
        ),
        migrations.CreateModel(
            name='InvitationUsers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(error_messages={'unique': 'A user with that email already exists.'}, max_length=254, verbose_name='email address')),
                ('count', models.IntegerField(default=1, verbose_name='Contador de envios')),
                ('is_registered', models.BooleanField(default=False, help_text='Indica si la invitacion fue resuelta.', verbose_name='registrado')),
                ('send_at', models.DateTimeField(help_text='Fecha en que se mando por ultima vez el correo.', verbose_name='Fecha de ultima invitacion')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha en que el registro fue creado.', verbose_name='Fecha de creación')),
                ('modified_at', models.DateTimeField(auto_now=True, help_text='Última fecha en que el registro fue modificado', verbose_name='Ultima modificación')),
                ('role', models.ForeignKey(default='USER', on_delete=django.db.models.deletion.CASCADE, to='users.userprofilerole', verbose_name='Rol de usuario')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='usuario')),
            ],
            options={
                'verbose_name': 'Invitación a usuario',
                'verbose_name_plural': 'Invitaciones a usuarios',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='role',
            field=models.ForeignKey(default='ADMIN', on_delete=django.db.models.deletion.CASCADE, to='users.userprofilerole', verbose_name='Rol de usuario'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]

version: '3.7'

volumes:
  local_postgres_data: { }
  local_postgres_data_backups: { }

networks:
  training_fyg_network_local:
    name: training_fyg_network_local
    driver: bridge
    ipam:
      driver: default

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: training_fyg_local_django
    container_name: training_fyg_local_django
    depends_on:
      - postgres
      - mailhog
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
      - ./.envs/.local/.dev
    ports:
      - "8000:8000"
    command: /start
    networks:
      training_fyg_network_local:
        aliases:
          - django

  postgres:
    build:
      context: .
      dockerfile: ./compose/local/postgres/Dockerfile
    image: training_fyg_local_postgres
    container_name: training_fyg_local_postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data:Z
      - local_postgres_data_backups:/backups/local:z
    env_file:
      - ./.envs/.local/.postgres
    ports:
      - "5401:5432"
    networks:
      training_fyg_network_local:
        aliases:
          - postgres

  mailhog:
    image: mailhog/mailhog:v1.0.0
    container_name: training_fyg_local_mailhog
    ports:
      - "8032:8025"
    networks:
      training_fyg_network_local:
        aliases:
          - mailhog

  redis:
    image: redis:5
    container_name: training_fyg_local_redis
    networks:
      training_fyg_network_local:
        aliases:
          - redis

  celeryworker:
    <<: *django
    image: training_fyg_local_celeryworker
    container_name: training_fyg_local_celeryworker
    depends_on:
      - redis
      - postgres
      - mailhog
    ports: [ ]
    command: /start-celeryworker
    networks:
      training_fyg_network_local:
        aliases:
          - celeryworker

  celerybeat:
    <<: *django
    image: trainig_fyg_local_celerybeat
    container_name: training_fyg_local_celerybeat
    depends_on:
      - redis
      - postgres
      - mailhog
    ports: [ ]
    command: /start-celerybeat
    networks:
      training_fyg_network_local:
        aliases:
          - celerybeat

  flower:
    <<: *django
    image: training_fyg_local_flower
    container_name: training_fyg_local_flower
    ports:
      - "5555:5555"
    command: /start-flower
    networks:
      training_fyg_network_local:
        aliases:
          - flower

  awscli:
    build:
      context: .
      dockerfile: ./compose/local/aws/Dockerfile
    image: training_fyg_local_awscli
    container_name: trainig_fyg_local_awscli
    env_file:
      # WARNING: usar siempre la carpeta qa, para no subir datos sensibles a git
      - ./.envs/.local/.aws
    volumes:
      - local_postgres_data_backups:/backups/local:z
    networks:
      training_fyg_network_local:
        aliases:
          - awscli
